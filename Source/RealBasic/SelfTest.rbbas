#tag ModuleProtected Module SelfTest	#tag Method, Flags = &h21		Private Sub assert(b as Boolean)		  if not b then		    break		    MsgBox "SelfTest failed"		  end if		End Sub	#tag EndMethod	#tag Method, Flags = &h1		Protected Sub Run()		  // Performs a test of license creation and validation		  		  dim keysForLicense as new Dictionary(_		  "Name" : "User Name",_		  "Email" : "user@email.com",_		  "Extra Field" : "Some Value")		  		  if true then		    //		    // Check validation		    //		    		    dim validator as new AquaticPrime (publicKey)		    assert validator.LastError = ""		    		    dim licenseDict as dictionary = validator.DictionaryForLicenseData (licensePlist)		    assert licenseDict <> nil		    assert licenseDict.Count = keysForLicense.Count		    for each key as String in licenseDict.Keys		      assert keysForLicense.Value(key) = licenseDict.Value(key)		    next		  end if		  		  if true then		    //		    // Check creation		    //		    		    dim creator as new AquaticPrime (publicKey, privateKey)		    assert creator.LastError = ""		    		    dim license as String = creator.LicenseDataForDictionary (keysForLicense)		    assert creator.LastError = ""		    license = ReplaceLineEndings (license.Trim, EndOfLine)		    dim licensePlistCopy as String = ReplaceLineEndings (licensePlist.Trim, EndOfLine)		    assert StrComp (license, licensePlistCopy, 0) = 0		  end if		End Sub	#tag EndMethod	#tag Constant, Name = licensePlist, Type = String, Dynamic = False, Default = \"<\?xml version\x3D\"1.0\" encoding\x3D\"UTF-8\"\?>\r<!DOCTYPE plist PUBLIC \"-//Apple//DTD PLIST 1.0//EN\" \"http://www.apple.com/DTDs/PropertyList-1.0.dtd\">\r<plist version\x3D\"1.0\">\r<dict>\r\t<key>Email</key>\r\t<string>user@email.com</string>\r\t<key>Extra Field</key>\r\t<string>Some Value</string>\r\t<key>Name</key>\r\t<string>User Name</string>\r\t<key>Signature</key>\r\t<data>\r\tJ9Ny/25ALN3G7ztMh+EjUbkcXkS226TshpeDFG0eQfEmhauSU6VAPMG9d8cd6xzcWJWR\r\tuYW6rR06zpZwEyh4VCopw4OAzcFrrxWJUuE9N2q1R+hH1bWBDwD7Jrbi9BclkbzbNwV+\r\tB29p+HhYfK0BwGJ6dl+JJ4A2RboxZMfd3+M\x3D\r\t</data>\r</dict>\r</plist>\r", Scope = Private	#tag EndConstant	#tag Constant, Name = privateKey, Type = String, Dynamic = False, Default = \"0x784E7537010DBC631887D265F8498A9F30F9ED58E7E8F63A0845C8ED2DB0B434D9F61A487D0D0790662029347EAFE43F9AE55E4674ED1053E0EDACC824C79A182FB38EE6C55B7D35267305E78C8360AD335170553899CE9D324AADBB3A811CF6D81A6EA1A981DDC12D8A66B67043B8C68AD2A1FA4C86BA1C961B398ECBF812FB", Scope = Private	#tag EndConstant	#tag Constant, Name = publicKey, Type = String, Dynamic = False, Default = \"0xB475AFD281949A94A4CBBB98F46E4FEEC976E4055BDD71570C68AD63C4890E4F46F1276CBB938B5899303DCEBE07D65F68580D69AF63987DD164832C372B6725F6D0DC0F9DBA6AE7EDA1588C69CA26FC0A682C928FA7FE4F553964548CE7F90722BE02E6E3DD40CA3C7B0DDF5EF37680A147EF5E069EE319C5B1E27AAC549C23", Scope = Private	#tag EndConstant	#tag ViewBehavior		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty	#tag EndViewBehaviorEnd Module#tag EndModule