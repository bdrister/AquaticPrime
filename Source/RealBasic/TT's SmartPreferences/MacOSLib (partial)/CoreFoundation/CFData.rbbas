#tag ClassClass CFDataInherits CFTypeImplements CFPropertyList	#tag Event		Function ClassID() As UInt32		  return me.ClassID		End Function	#tag EndEvent	#tag Event		Function VariantValue() As Variant		  return me.Data		End Function	#tag EndEvent	#tag Method, Flags = &h0		 Shared Function ClassID() As UInt32		  #if TargetMacOS		    declare function TypeID lib CoreFoundation.framework alias "CFDataGetTypeID" () as UInt32		    static id as UInt32 = TypeID		    return id		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(theData as MemoryBlock)		  // This one also takes Strings. No need for an extra constructor taking Strings therefore		  		  #if TargetMacOS		    declare function CFDataCreate lib CoreFoundation.framework (allocator as Ptr, bytes as Ptr, length as Integer) as Ptr		    		    if not (theData is nil) then		      if theData.Size < 0 then		        // this comes from a Ptr - you need to use the CFType constructor with the additional Boolean parm!		        raise new TypeMismatchException		      end if		      		      super.Constructor CFDataCreate(nil, theData, theData.Size), true		    end if		  #endif		End Sub	#tag EndMethod	#tag ComputedProperty, Flags = &h0		#tag Getter			Get			  #if TargetMacOS			    declare function CFDataGetLength lib CoreFoundation.framework (theData as Ptr) as Integer			    declare sub CFDataGetBytes lib CoreFoundation.framework (theData as Ptr, range as CFRange, buffer as Ptr)			    			    if not ( self = nil ) then			      dim dataLength as Integer = CFDataGetLength(me.Reference)			      if dataLength > 0 then			        dim m as new MemoryBlock(dataLength)			        dim range as CFRange = CFRangeMake(0, dataLength)			        CFDataGetBytes me.Reference, range, m			        return m			      end if			    end if			  #endif			  			  return new MemoryBlock(0)			End Get		#tag EndGetter		Data As MemoryBlock	#tag EndComputedProperty	#tag ComputedProperty, Flags = &h0		#tag Getter			Get			  #if TargetMacOS			    declare function CFDataGetLength lib CoreFoundation.framework (theData as Ptr) as Integer			    			    return  CFDataGetLength( me.Reference )			  #endif			End Get		#tag EndGetter		Length As Integer	#tag EndComputedProperty	#tag ViewBehavior		#tag ViewProperty			Name="Description"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"			InheritedFrom="CFType"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			Type="Integer"			InheritedFrom="CFType"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="CFType"		#tag EndViewProperty		#tag ViewProperty			Name="Length"			Group="Behavior"			Type="Integer"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			Type="String"			InheritedFrom="CFType"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			Type="String"			InheritedFrom="CFType"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="CFType"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass