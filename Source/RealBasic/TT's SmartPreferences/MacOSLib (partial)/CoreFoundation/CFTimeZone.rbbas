#tag ClassClass CFTimeZoneInherits CFType	#tag Event		Function ClassID() As UInt32		  return me.ClassID		End Function	#tag EndEvent	#tag Method, Flags = &h0		Function Abbreviation(d as Date) As CFString		  #if TargetMacOS		    declare function CFTimeZoneCopyAbbreviation lib CoreFoundation.framework (tz as Ptr, at as Double) as Ptr		    // Caution: If this would return a CFStringRef, we'd have to Retain its value!		    // Instead, using "CFString" takes care of that automagically		    		    dim theDate as new CFDate(d)		    return new CFString(CFTimeZoneCopyAbbreviation(me.Reference, theDate.AbsoluteTime), true)		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		 Shared Function ClassID() As UInt32		  #if TargetMacOS		    declare function TypeID lib CoreFoundation.framework alias "CFTimeZoneGetTypeID" () as UInt32		    static id as UInt32 = TypeID		    return id		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor()		  // This gives the current system's time zone		  		  #if TargetMacOS		    declare function CFTimeZoneCopySystem lib CoreFoundation.framework () as Ptr		    		    super.Constructor CFTimeZoneCopySystem(), true		  #endif		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Sub Constructor(timeZoneName as String)		  #if TargetMacOS		    declare function CFTimeZoneCreateWithName lib CoreFoundation.framework (allocator as Ptr, name as CFStringRef, tryAbbrev as Boolean) as Ptr		    		    super.Constructor CFTimeZoneCreateWithName(nil, timeZoneName, true), true		  #endif		End Sub	#tag EndMethod	#tag Method, Flags = &h0		Function IsDST(d as Date) As Boolean		  #if TargetMacOS		    declare function CFTimeZoneIsDaylightSavingsTime lib CoreFoundation.framework (tz as Ptr, at as Double) as Boolean		    		    dim theDate as new CFDate(d)		    return CFTimeZoneIsDaylightSavingsTime(me.Reference, theDate.AbsoluteTime)		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		 Shared Function NameList() As String()		  #if TargetMacOS		    declare function CFTimeZoneCopyKnownNames lib CoreFoundation.framework () as Ptr		    		    dim nameArray as new CFArray(CFTimeZoneCopyKnownNames, CFType.HasOwnership)		    return nameArray.StringValues		  #endif		End Function	#tag EndMethod	#tag Method, Flags = &h0		Function Offset(d as Date) As Double		  // returned unit: seconds		  		  #if TargetMacOS		    declare function CFTimeZoneGetSecondsFromGMT lib CoreFoundation.framework (tz as Ptr, at as Double) as Double		    		    dim theDate as new CFDate(d)		    return CFTimeZoneGetSecondsFromGMT(me.Reference, theDate.AbsoluteTime)		  #endif		End Function	#tag EndMethod	#tag ComputedProperty, Flags = &h0		#tag Getter			Get			  #if TargetMacOS			    declare function CFTimeZoneGetName lib CoreFoundation.framework (tz as Ptr) as Ptr			    // Caution: If this would return a CFStringRef, we'd have to Retain its value!			    // Instead, using "CFString" takes care of that automagically			    			    dim p as Ptr = me.Reference			    if p <> nil then			      return new CFString(CFTimeZoneGetName(p), false)			    end if			  #endif			End Get		#tag EndGetter		Name As String	#tag EndComputedProperty	#tag ViewBehavior		#tag ViewProperty			Name="Description"			Group="Behavior"			Type="String"			EditorType="MultiLineEditor"			InheritedFrom="CFType"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			Type="Integer"			InheritedFrom="CFType"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="CFType"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			Type="String"			EditorType="MultiLineEditor"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			Type="String"			InheritedFrom="CFType"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			Type="Integer"			InheritedFrom="CFType"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass